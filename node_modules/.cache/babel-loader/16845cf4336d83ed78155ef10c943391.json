{"ast":null,"code":"var _jsxFileName = \"/home/ruijadom/code/courses/graphql/odyssey/deploy/odyssey-client/src/pages/module.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { Layout, ModuleDetail, QueryResult } from '../components';\n/**\n * GET_MODULE_AND_PARENT_TRACK gql query to retrieve a specific module and its parent track,\n * both needed for the ModuleDetail component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GET_MODULE_AND_PARENT_TRACK = gql`\n  query getModuleAndParentTrack($moduleId: ID!, $trackId: ID!) {\n    module(id: $moduleId) {\n      id\n      title\n      content\n      videoUrl\n    }\n    track(id: $trackId) {\n      id\n      title\n      modules {\n        id\n        title\n        length\n      }\n    }\n  }\n`;\n/**\n * Module page fetches both parent track and module's data from the gql query GET_MODULE_AND_PARENT_TRACK\n * and feeds them to the ModuleDetail component\n */\n\nconst Module = ({\n  moduleId,\n  trackId\n}) => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_MODULE_AND_PARENT_TRACK, {\n    variables: {\n      moduleId,\n      trackId\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    fullWidth: true,\n    children: /*#__PURE__*/_jsxDEV(QueryResult, {\n      error: error,\n      loading: loading,\n      data: data,\n      children: /*#__PURE__*/_jsxDEV(ModuleDetail, {\n        track: data === null || data === void 0 ? void 0 : data.track,\n        module: data === null || data === void 0 ? void 0 : data.module\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Module, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Module;\nexport default Module;\n\nvar _c;\n\n$RefreshReg$(_c, \"Module\");","map":{"version":3,"sources":["/home/ruijadom/code/courses/graphql/odyssey/deploy/odyssey-client/src/pages/module.js"],"names":["React","useQuery","gql","Layout","ModuleDetail","QueryResult","GET_MODULE_AND_PARENT_TRACK","Module","moduleId","trackId","loading","error","data","variables","track","module"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,WAA/B,QAAkD,eAAlD;AAEA;AACA;AACA;AACA;;;AACA,OAAO,MAAMC,2BAA2B,GAAGJ,GAAI;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBO;AAoBP;AACA;AACA;AACA;;AACA,MAAMK,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAAA;;AACxC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACK,2BAAD,EAA8B;AACrEO,IAAAA,SAAS,EAAE;AAAEL,MAAAA,QAAF;AAAYC,MAAAA;AAAZ;AAD0D,GAA9B,CAAzC;AAIA,sBACE,QAAC,MAAD;AAAQ,IAAA,SAAS,MAAjB;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEE,KAApB;AAA2B,MAAA,OAAO,EAAED,OAApC;AAA6C,MAAA,IAAI,EAAEE,IAAnD;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE,KAA3B;AAAkC,QAAA,MAAM,EAAEF,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEG;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAZD;;GAAMR,M;UAC6BN,Q;;;KAD7BM,M;AAcN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { Layout, ModuleDetail, QueryResult } from '../components';\n\n/**\n * GET_MODULE_AND_PARENT_TRACK gql query to retrieve a specific module and its parent track,\n * both needed for the ModuleDetail component\n */\nexport const GET_MODULE_AND_PARENT_TRACK = gql`\n  query getModuleAndParentTrack($moduleId: ID!, $trackId: ID!) {\n    module(id: $moduleId) {\n      id\n      title\n      content\n      videoUrl\n    }\n    track(id: $trackId) {\n      id\n      title\n      modules {\n        id\n        title\n        length\n      }\n    }\n  }\n`;\n\n/**\n * Module page fetches both parent track and module's data from the gql query GET_MODULE_AND_PARENT_TRACK\n * and feeds them to the ModuleDetail component\n */\nconst Module = ({ moduleId, trackId }) => {\n  const { loading, error, data } = useQuery(GET_MODULE_AND_PARENT_TRACK, {\n    variables: { moduleId, trackId },\n  });\n\n  return (\n    <Layout fullWidth>\n      <QueryResult error={error} loading={loading} data={data}>\n        <ModuleDetail track={data?.track} module={data?.module} />\n      </QueryResult>\n    </Layout>\n  );\n};\n\nexport default Module;\n"]},"metadata":{},"sourceType":"module"}