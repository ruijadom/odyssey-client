{"ast":null,"code":"var _jsxFileName = \"/home/ruijadom/code/courses/graphql/odyssey/deploy/odyssey-client/src/pages/track.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { Layout, QueryResult } from '../components';\nimport TrackDetail from '../components/track-detail';\n/** GET_TRACK gql query to retrieve a specific track by its ID */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GET_TRACK = gql`\n  query getTrack($trackId: ID!) {\n    track(id: $trackId) {\n      id\n      title\n      author {\n        id\n        name\n        photo\n      }\n      thumbnail\n      length\n      modulesCount\n      numberOfViews\n      modules {\n        id\n        title\n        length\n      }\n      description\n    }\n  }\n`;\n/**\n * Track Page fetches a track's data from the gql query GET_TRACK\n * and provides it to the TrackDetail component to display\n */\n\nconst Track = ({\n  trackId\n}) => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TRACK, {\n    variables: {\n      trackId\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(QueryResult, {\n      error: error,\n      loading: loading,\n      data: data,\n      children: /*#__PURE__*/_jsxDEV(TrackDetail, {\n        track: data === null || data === void 0 ? void 0 : data.track\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Track, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Track;\nexport default Track;\n\nvar _c;\n\n$RefreshReg$(_c, \"Track\");","map":{"version":3,"sources":["/home/ruijadom/code/courses/graphql/odyssey/deploy/odyssey-client/src/pages/track.js"],"names":["React","useQuery","gql","Layout","QueryResult","TrackDetail","GET_TRACK","Track","trackId","loading","error","data","variables","track"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,eAApC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA;;;AACA,OAAO,MAAMC,SAAS,GAAGJ,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBO;AAwBP;AACA;AACA;AACA;;AACA,MAAMK,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACK,SAAD,EAAY;AACnDM,IAAAA,SAAS,EAAE;AAAEJ,MAAAA;AAAF;AADwC,GAAZ,CAAzC;AAIA,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEE,KAApB;AAA2B,MAAA,OAAO,EAAED,OAApC;AAA6C,MAAA,IAAI,EAAEE,IAAnD;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAZD;;GAAMN,K;UAC6BN,Q;;;KAD7BM,K;AAcN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { Layout, QueryResult } from '../components';\nimport TrackDetail from '../components/track-detail';\n\n/** GET_TRACK gql query to retrieve a specific track by its ID */\nexport const GET_TRACK = gql`\n  query getTrack($trackId: ID!) {\n    track(id: $trackId) {\n      id\n      title\n      author {\n        id\n        name\n        photo\n      }\n      thumbnail\n      length\n      modulesCount\n      numberOfViews\n      modules {\n        id\n        title\n        length\n      }\n      description\n    }\n  }\n`;\n\n/**\n * Track Page fetches a track's data from the gql query GET_TRACK\n * and provides it to the TrackDetail component to display\n */\nconst Track = ({ trackId }) => {\n  const { loading, error, data } = useQuery(GET_TRACK, {\n    variables: { trackId },\n  });\n\n  return (\n    <Layout>\n      <QueryResult error={error} loading={loading} data={data}>\n        <TrackDetail track={data?.track} />\n      </QueryResult>\n    </Layout>\n  );\n};\n\nexport default Track;\n"]},"metadata":{},"sourceType":"module"}